param([Switch]$Release)

Import-Module "$PSScriptRoot\..\TestFramework.psm1" -Force
$ModulePath = Get-ModulePath -Release:$Release
$BrowserPort = Get-BrowserPort -Release:$Release

Import-Module $ModulePath -Force

Describe "Element" {

    Context "ArgumentList" {
        Invoke-RestMethod -Method Post -Uri "http://localhost:10001/api/internal/component/terminal" -Body ('$dashboardservice.setDashboard((
            New-UDDashboard -Title "PowerShell Universal Dashboard" -Content {
            $Patch = "comp1"
            New-UDButton -Id "button" -Text $Patch -OnClick (New-UDEndpoint -Endpoint { 
                Add-UDElement -ParentId "parent" -Content {
                    New-UDElement -Id "output" -Tag "div" -Content { $ArgumentList[0] }
                }
            } -ArgumentList $Patch )
            New-UDElement -Id "parent" -Tag "div" -Content { }
        }))') -SessionVariable ss -ContentType "text/plain"

        $Cache:Driver.navigate().refresh()

         It "should use an endpoint" {
            Find-SeElement -Driver $Cache:Driver -Id "button" | Invoke-SeClick
            (Find-SeElement -Drive $Cache:Driver -Id "output").Text | should be "comp1"
        }
    }

    Context "Should work with attributes that start with on" {
        Invoke-RestMethod -Method Post -Uri "http://localhost:10001/api/internal/component/terminal" -Body ('$dashboardservice.setDashboard((
            New-UDDashboard -Title "PowerShell Universal Dashboard" -Content {
            New-UDElement -Tag "a" -Id "element" -Attributes @{onclick = "kaboom"} -Content {"IAMME"}
        }))') -SessionVariable ss -ContentType "text/plain"

        
        $Cache:Driver.navigate().refresh()

         It "should not show error" {
            (Find-SeElement -Driver $Cache:Driver -Id "element").Text | Should be "IAMME"
        }
    }

    Context "Session Endpoint Cache" {

         Invoke-RestMethod -Method Post -Uri "http://localhost:10001/api/internal/component/terminal" -Body ('$dashboardservice.setDashboard((
            New-UDDashboard -Title "PowerShell Universal Dashboard" -Pages @(
                New-UDPage -Name "Home" -Content {
                New-UDRow -Columns {
                   New-UDColumn -Endpoint {
                      New-UDButton -Text "Click me" -OnClick {
                          Set-UDElement -Id "changer" -Content { Get-Date }
                      } 
                   } -AutoRefresh -RefreshInterval 2
                }
    
                New-UDRow -Columns {
                    New-UDColumn -Content {
                        New-UDElement -Tag div -Id "changer" -Content {}
                    }
                }
    
                New-UDElement -Tag "div" -Id "sessionInfo" -Endpoint {
                    $SessionState = $null
                    $DashboardService.EndpointService.EndpointCache.TryGetValue("SessionState" + $SessionId, [ref]$SessionState)
                    $SessionState.Endpoints.Count
                } -AutoRefresh -RefreshInterval 1
             })
        ))') -SessionVariable ss -ContentType "text/plain"

        $Cache:Driver.navigate().refresh()

         It "has only 1 cached endpoint" {
             Find-SeElement -Driver $Cache:Driver -ClassName "btn" | Invoke-SeClick

             $ChangerText = (Find-SeElement -Driver $Cache:Driver -Id "changer").Text
             $ChangerText | Should not be $null
             Find-SeElement -Driver $Cache:Driver -ClassName "btn" | Invoke-SeClick

             (Find-SeElement -Driver $Cache:Driver -Id "changer").Text | should not be $ChangerText
             (Find-SeElement -Driver $Cache:Driver -Id "sessionInfo").Text | should be "1"
         }
    }

    Context "Heading" {

        Invoke-RestMethod -Method Post -Uri "http://localhost:10001/api/internal/component/terminal" -Body ('$dashboardservice.setDashboard((
            New-UDDashboard -Title "PowerShell Universal Dashboard" -Pages @(
            New-UDPage -Name "Home" -Content {
                New-UDRow -Columns {
                   New-UDColumn -Endpoint {
                      New-UDHeading -Text "Hello" -Size 4  -Id "Test" 
                   }
                }
             } 
        )))') -SessionVariable ss -ContentType "text/plain"

        $Cache:Driver.navigate().refresh()

         It "has heading" {
             (Find-SeElement -Driver $Cache:Driver -Id "Test").Text | Should be "Hello"
         }
     }

    Context "Endpoint" {

        Invoke-RestMethod -Method Post -Uri "http://localhost:10001/api/internal/component/terminal" -Body ('$dashboardservice.setDashboard((
            New-UDDashboard -Title "PowerShell Universal Dashboard" -Content {
            New-UDElement -Tag "div" -Id "testElement" -Endpoint {
                New-UDElement -Tag "span" -Content { "Hey!" }
            }
        }))') -SessionVariable ss -ContentType "text/plain"

        $Cache:Driver.navigate().refresh()

        It "has content generated by endpoint" {
            (Find-SeElement -Driver $Cache:Driver -Id "testElement").Text | Should be "Hey!"
        }
    }

    Context "Events" {
        Invoke-RestMethod -Method Post -Uri "http://localhost:10001/api/internal/component/terminal" -Body ('$dashboardservice.setDashboard((
            New-UDDashboard -Title "PowerShell Universal Dashboard" -Content {
            New-UDRow -Columns { 
                New-UDColumn -Size 12 -Content {
                    New-UDElement -Tag "ul" -Id "chatroom" -Attributes @{ className = "collection" }
                }
            }

            New-UDRow -Columns { 
                New-UDColumn -Size 8 -Content {
                    New-UDTextbox -Id "message" -Placeholder "Type a chat message"
                }
                New-UDColumn -Size 2 -Content {
                    New-UDButton -Text "Send" -Id "btnSend" -onClick {
                        $message = New-UDElement -Id "chatMessage" -Tag "li" -Attributes @{ className = "collection-item" } -Content {
                            $txtMessage = Get-UDElement -Id "message" 
                            "$(Get-Date) $User : $($txtMessage.Attributes["value"])"
                        }
                        
                        Set-UDElement -Id "message" -Attributes @{ 
                            type = "text"
                            value = ""
                            placeholder = "Type a chat message" 
                        }

                        Add-UDElement -ParentId "chatroom" -Content { $message } -Broadcast
                    }
                }

                New-UDColumn -Size 2 -Content {
                    New-UDButton -Text "Clear Message"-Id "btnClear" -OnClick {
                        Clear-UDElement -Id "chatroom"
                    }
                }
            }
        }))') -SessionVariable ss -ContentType "text/plain"
   
        $Cache:Driver.navigate().refresh()

        It "should enter a chat message" {
            $MessageBox = Find-SeElement -Driver $Cache:Driver -Id "message"
            Send-SeKeys -Element $MessageBox -Keys "Hey"

            $btnSend = Find-SeElement -Driver $Cache:Driver -Id "btnSend"
            Invoke-SeClick -Element $btnSend

            (Find-SeElement -Driver $Cache:Driver -Id "chatMessage").Text | Should BeLike "*Hey"
        }
        
        It "should clear chat messages" {
            $MessageBox = Find-SeElement -Driver $Cache:Driver -Id "message"
            Send-SeKeys -Element $MessageBox -Keys "Hey"


            $btnSend = Find-SeElement -Driver $Cache:Driver -Id "btnSend"
            Invoke-SeClick -Element $btnSend

            $btnSend = Find-SeElement -Driver $Cache:Driver -Id "btnClear"
            Invoke-SeClick -Element $btnSend

            (Find-SeElement -Driver $Cache:Driver -Id "chatMessage").Text | Should Not BeLike "*Hey"
        }
    }

    Context "Element in dynamic page" {
        
        Invoke-RestMethod -Method Post -Uri "http://localhost:10001/api/internal/component/terminal" -Body ('$dashboardservice.setDashboard((            
            New-UDDashboard -Title "home" -Pages @(
                New-UDPage -url "/home" -Endpoint {
                    New-UDCard -Title "Debug" -Content {
                        New-UDButton -Id "Button" -Text "Restart" -OnClick { Set-UDElement -Id "Output1" -Content {"Clicked"}}
                        New-UDHeading -Id "Output1" -Text ""
                    }
                } -OutVariable HomePage
            
                $HomePage[0].Name = "Home"
                New-UDPage -name "home2" -Content {
                    New-UDCard -Title "Debug" -Content {
                        New-UDButton -Text "Restart" -OnClick { Set-UDElement -Id "Output" -Content {"Clicked"}}
                        New-UDHeading -Id "Output" -Text ""
                    }
                } -OutVariable HomePage2

        )))') -SessionVariable ss -ContentType 'text/plain'

        $Cache:Driver.navigate().refresh()

        It "Should work in dynamic page" {
            Find-SeElement -Id "Button" -Driver $Cache:Driver | Invoke-SeClick

            (Find-SeElement -Id "Output1" -Driver $Cache:Driver).Text | Should be "Clicked"
        }
    }
}
